# Amplifier Smoke Tests
# Test actual make commands that users run
# Focus on "does it work?" not implementation details
# Should complete in < 2 minutes total

tests:
  # Core development commands
  - name: Help Command
    description: Verify make help works
    command: make help
    timeout: 5
    validate:
      exit_code: 0
      output_contains:
        - "QUICK START"
        - "make install"

  - name: Code Quality Check
    description: Run make check (format, lint, type-check)
    command: make check
    timeout: 60
    validate:
      exit_code: 0
      output_contains:
        - "All checks passed"

  # Content commands (these work per user)
  - name: Content Status
    description: Show content statistics
    command: make content-status
    timeout: 30
    validate:
      exit_code: 0
      output_contains:
        - "Content status"

  - name: Content Scan
    description: Scan content directories
    command: make content-scan
    timeout: 30
    validate:
      exit_code: 0
      # Just check it runs - output varies by config

  - name: Content Search
    description: Search content with query
    command: make content-search q="test"
    timeout: 20
    validate:
      exit_code: 0
      output_contains:
        - "Searching: test"

  # Knowledge commands (limit processing)
  - name: Knowledge Stats
    description: Show knowledge extraction statistics
    command: make knowledge-stats
    timeout: 10
    validate:
      exit_code: 0
      output_contains:
        - "Knowledge Base Statistics"

  # Removed Knowledge Sync Batch - requires Claude SDK and takes too long
  # Could be re-enabled with: make knowledge-sync-batch N=1

  - name: Knowledge Search
    description: Search extracted knowledge
    command: make knowledge-search Q="test"
    timeout: 15
    validate:
      exit_code: 0
      output_contains:
        - "Searching for: test"

  - name: Knowledge Query
    description: Query the knowledge base
    command: make knowledge-query Q="test query"
    timeout: 20
    validate:
      exit_code: 0
      output_contains:
        - "Querying knowledge base"

  - name: Knowledge Export Text
    description: Export knowledge as text
    command: make knowledge-export FORMAT=text 2>&1 | head -50
    timeout: 15
    validate:
      exit_code: 0
      output_contains:
        - "Exporting knowledge as text"

  - name: Knowledge Events
    description: Show recent pipeline events
    command: make knowledge-events N=5
    timeout: 10
    validate:
      exit_code: 0
      output_contains_any:
        - "extraction_"
        - "content_"
        - "No events"
        - "2025-"
        - "2024-"

  - name: Knowledge Events Summary
    description: Summarize pipeline events
    command: make knowledge-events-summary SCOPE=last
    timeout: 10
    validate:
      exit_code: 0
      output_contains_any:
        - "summary"
        - "Summary"
        - "No events"
        - "events"

  # Graph commands
  - name: Graph Stats
    description: Show graph statistics
    command: make knowledge-graph-stats 2>&1 | head -20
    timeout: 15
    validate:
      exit_code: 0
      output_contains:
        - "Knowledge Graph Statistics"

  - name: Graph Search
    description: Search in knowledge graph
    command: make knowledge-graph-search Q="test"
    timeout: 15
    validate:
      exit_code: 0
      output_contains:
        - "Searching knowledge graph for"

  - name: Graph Neighbors
    description: Explore concept neighborhood
    command: make knowledge-graph-neighbors CONCEPT="test" HOPS=1
    timeout: 15
    validate:
      exit_code: 0
      output_contains:
        - "Exploring 1-hop neighborhood"

  - name: Graph Top Predicates
    description: Show top predicates in graph
    command: make knowledge-graph-top-predicates N=5
    timeout: 10
    validate:
      exit_code: 0
      output_contains_any:
        - "predicates"
        - "Top"
        - "No predicates"
        - "Graph"

  - name: Graph Export
    description: Export graph in default format
    command: make knowledge-graph-export FORMAT=gexf 2>&1 | tail -5
    timeout: 15
    validate:
      exit_code: 0
      output_contains:
        - "Graph exported"

  # Synthesis pipeline (minimal test)
  - name: Triage Test
    description: Test triage with minimal input
    command: |
      echo '# Test Document\n\nThis is test content for smoke testing the triage system.' > /tmp/smoke_test.md && \
      make triage query='summarize' files='/tmp/smoke_test.md' 2>&1 | head -20; \
      rm -f /tmp/smoke_test.md
    timeout: 30
    validate:
      exit_code: 0
      output_contains_any:
        - "Processing"
        - "Analyzing"
        - "test content"
        - "triage"

  # Utility commands
  - name: AI Context Files
    description: Build AI context documentation
    command: make ai-context-files
    timeout: 30
    validate:
      exit_code: 0
      output_contains:
        - "AI context files generated"

  - name: Worktree List
    description: List git worktrees
    command: make worktree-list
    timeout: 5
    validate:
      exit_code: 0
      output_contains_any:
        - "amplifier-clean-up"
        - "worktree"
        - "/home/"

  # Development commands
  - name: Run Tests
    description: Run pytest test suite
    command: make test 2>&1 | head -50
    timeout: 30
    validate:
      exit_code: 0
      output_contains_any:
        - "test session starts"
        - "collected"
        - "pytest"
        - "PASSED"
        - "FAILED"

  - name: Workspace Info
    description: Show workspace information
    command: make workspace-info
    timeout: 5
    validate:
      exit_code: 0
      output_contains:
        - "Workspace"

  - name: Clean WSL Files
    description: Clean WSL-related files
    command: make clean-wsl-files
    timeout: 10
    validate:
      exit_code: 0
      output_contains:
        - "Cleaning WSL-related files"

  # Python module basic checks (simple imports only)
  - name: Core Imports
    description: Verify core modules import
    command: |
      python -c "
      import amplifier
      from amplifier.config.paths import paths
      from amplifier.utils.file_io import write_json
      print('Core imports successful')
      "
    timeout: 5
    validate:
      exit_code: 0
      output_contains:
        - "Core imports successful"

  # Removed AI Validation Example - was trivial and not meaningful

  # Startup tests for heavy/interactive commands
  # These verify that processing starts and makes progress
  
  - name: Knowledge Sync Processing
    description: Verify knowledge-sync starts processing articles
    command: timeout 10 make knowledge-sync 2>&1 || true
    timeout: 11
    startup_test: true
    validate:
      startup_ok: true
      output_contains_any:
        - "Claude Code SDK verified"
        - "SPO extraction enabled"
        - "Scanning directory"
        - "Loading articles"
        - "articles found"
        - "Processing article"
  
  - name: Knowledge Update Processing
    description: Verify knowledge-update starts the update process
    command: timeout 10 make knowledge-update 2>&1 || true
    timeout: 11
    startup_test: true
    validate:
      startup_ok: true
      output_contains_any:
        - "Step 1: Scanning content"
        - "Running full knowledge pipeline"
        - "Scanning directories"
        - "Step 2:"
        - "Step 3:"
      
  - name: Knowledge Synthesize Processing
    description: Verify knowledge-synthesize starts synthesis with limited items
    command: timeout 10 make knowledge-synthesize N=1 2>&1 || true
    timeout: 11
    startup_test: true
    validate:
      startup_ok: true
      output_contains_any:
        - "Synthesizing patterns from knowledge"
        - "Starting knowledge synthesis"
        - "Processed"
        - "KNOWLEDGE SYNTHESIS SUMMARY"
        - "TOP INSIGHTS"
      
  - name: Knowledge Graph Build Processing
    description: Verify knowledge-graph-build starts building the graph
    command: timeout 10 make knowledge-graph-build 2>&1 || true
    timeout: 11
    startup_test: true
    validate:
      startup_ok: true
      output_contains_any:
        - "Building knowledge graph from extractions"
        - "Loaded"
        - "Built graph with"
        - "Top 20 Concepts"
        - "Detecting tensions"
      
  - name: Knowledge Graph Viz Processing
    description: Verify knowledge-graph-viz starts creating visualization
    command: timeout 10 make knowledge-graph-viz 2>&1 || true
    timeout: 11
    startup_test: true
    validate:
      startup_ok: true
      output_contains_any:
        - "Creating interactive visualization"
        - "Building knowledge graph"
        - "Created visualization"
        - "Visualization saved to"
        - "Detected"
      
  - name: Knowledge Events Tail Startup
    description: Verify knowledge-events-tail can start (interactive command)
    command: timeout 2 make knowledge-events-tail 2>&1 || true
    timeout: 3
    startup_test: true
    validate:
      startup_ok: true
      
  - name: Trace Viewer Startup
    description: Verify trace-viewer can start (interactive command)
    command: timeout 2 make trace-viewer 2>&1 || true
    timeout: 3
    startup_test: true
    validate:
      startup_ok: true
